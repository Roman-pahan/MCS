

const auto = {
    brand: 'Tesla',
    model: 'ModelX',
    // details: {
    //     color: '–∫—Ä–∞—Å–Ω—ã–π',
    //     year: 2021,
    //     atStock: true
    // }
}

const cars = [auto];

cars.forEach(car =>{
    console.log(`${car.brand} ${car.details?.year}: —Ü–≤–µ—Ç - ${car.details?.color}`)
})

const getBalance = wallet => {
  return console.log(wallet?.ethereum?.balance.toUpperCase())
}

// –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
getBalance({ethereum: {balance: "0.2 eth"}}) // "0.2 ETH"
getBalance({ethereum: null}) // undefined
getBalance({}) // undefined

const getAddress = address => {
    return address ?? "wagmi.eth" //–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è - "–ö–æ—Ä–æ—Ç–∫–æ–≤ –∑–∞–º—ã–∫–∞–Ω–∏–µ"
  }
  
  console.log(getAddress("mcs.eth")) // "mcs.eth"
  console.log(getAddress(null)) // "wagmi.eth"
  console.log(getAddress(undefined)) // "wagmi.eth"

//–ö–æ–º–±–∏–Ω–∞—Ü–∏—è —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const getPlaceholder = () => {
    console.log("–í—ã–∑–æ–≤ getPlaceholder")
    return "Anon"
  }
  
  const sayHello = name => {
    return `Hello ${name ?? getPlaceholder()}`
  }
  
  console.log(sayHello("Vitalik")) // "Hello Vitalik"
  console.log(sayHello())



  const getBalance1 = address => {
    return console.log(address?.balance ?? "N/A")
}

// –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
getBalance1({balance: 42}) // 42
getBalance1({}) // "N/A"

const getGreeting = user => {
      return `–ü—Ä–∏–≤–µ—Ç, ${user?.name ?? "–∞–Ω–æ–Ω–∏–º"}`
  }
  
  // –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
  console.log(getGreeting({name: "–í–∏—Ç–∞–ª–∏–∫"})) // "–ü—Ä–∏–≤–µ—Ç, –í–∏—Ç–∞–ª–∏–∫"
  console.log(getGreeting({})) // "–ü—Ä–∏–≤–µ—Ç, –∞–Ω–æ–Ω–∏–º"

  const dao = {
    members:{
        founder:{
            // address9: "rkferjgek"
        }
    }
  }


//–†–ê–ë–û–ß–ò–ô –ö–û–î
//   let address9 = undefined
//     if (dao.members && dao.members.founder && dao.members.founder.address9) {
//     console.log(address9 = dao.members.founder.address9)
//     } else {
//         address9 = "N/A"
//         console.log(address9)
//     }

//–†–ï–§–ê–ö–¢–û–†–ò–ù–ì
const address9 = dao.members?.founder?.address9 ?? "N/A"

console.log(address9)





const network = {
    chainId: 1
  }
  
  const url = "https://" + (network.url ?? "")
  console.log(url) // https://undefined //("https://" + network.url) ?? ""

const getChainId = network => {
  return (network?.info?.chainId ?? 0)
}

console.log("–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
console.log(getChainId({info: { chainId: 31337}})) // 31337
console.log(getChainId({info: null})) // 0
console.log(getChainId({})) // 0


// const getTxValue = tx => {
//     if (tx.details && tx.details.value && tx.details.value.eth) {
//       return tx.details.value.eth
//     }
//     return "N/A"
//   }
  

const getTxValue = tx => {
    return ((tx.details?.value?.eth) ?? "N/A")
  }
  // –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
  console.log(getTxValue({hash: 0x1, success: false})) // "N/A"
  console.log(getTxValue({hash: 0x2, success: true, details: {value: {eth: 0.2}}})) // 0.2




const getNetworkName = network => {
    return ((network.info?.name.toLowerCase())??"network")
} 

// –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
console.log(getNetworkName({info: {name: "Rinkeby"}})) // "rinkeby"
console.log(getNetworkName({info: null})) // "network"
console.log(getNetworkName({})) // "network"



// const getPushNotification = status => {
//     if (status === "received") {
//       return "–†–µ—Å—Ç–æ—Ä–∞–Ω –≥–æ—Ç–æ–≤–∏—Ç –∑–∞–∫–∞–∑."
//     } else if (status === "prepared") {
//       return "–ü–µ—Ä–µ–¥–∞–µ–º –∑–∞–∫–∞–∑ –∫—É—Ä—å–µ—Ä—É."
//     } else if (status === "picked") {
//       return "–ö—É—Ä—å–µ—Ä —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç —É –≤–∞—Å!"
//     } else if (status === "arrived") {
//       return "–ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω!"
//     } else {
//       return "–°—Ç–∞—Ç—É—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"
//     }
//   }

//   console.log(getPushNotification("received"))

const getPushNotification = status => {
    const notifications = {
      received: "–†–µ—Å—Ç–æ—Ä–∞–Ω –≥–æ—Ç–æ–≤–∏—Ç –∑–∞–∫–∞–∑.",
      prepared: "–ü–µ—Ä–µ–¥–∞–µ–º –∑–∞–∫–∞–∑ –∫—É—Ä—å–µ—Ä—É.",
      picked: "–ö—É—Ä—å–µ—Ä —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç —É –≤–∞—Å!",
      arrived: "–ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω!"
    }
  
    return notifications[status] ?? "–°—Ç–∞—Ç—É—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"
  }
  console.log(getPushNotification("received"))


//   const getTxStatus = tx => {
//     if (tx.status === "pending") {
//         return "–û–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç —Å–µ—Ç–∏."
//     } else if (tx.status === "confirmed") {
//         return "–ü—Ä–æ–±—É–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é."
//     } else if (tx.status === "canceled") {
//         return "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é."
//     } else if (tx.status === "success") {
//         return "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
//     } else {
//         return "–°—Ç–∞—Ç—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."
//     }
// }



const getTxStatus = tx => {
    const messages = {
        pending: "–û–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç —Å–µ—Ç–∏.",
        confirmed: "–ü—Ä–æ–±—É–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é.",
        canceled: "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é.",
        success: "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    }
    return messages[tx.status] ?? "–°—Ç–∞—Ç—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."
}

const tx1 = {status: "pending"}
console.log(getTxStatus(tx1)) // –û–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç —Å–µ—Ç–∏.
const tx2 = {status: "success"}
console.log(getTxStatus(tx2)) // –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!


const string = "stonks"
const number = 0

if (string) { // ‚úÖ
  console.log("–°—Ç—Ä–æ–∫–∞ –≤ —É—Å–ª–æ–≤–∏–∏") 
}

if (number) { // ‚ùå
  console.log("–ß–∏—Å–ª–æ –≤ —É—Å–ª–æ–≤–∏–∏") 
}

// –ü—Ä–µ–æ–±—Ä–∞—É–∑—é—Ç—Å—è –≤ false:
// ü§• false (—É–∂–µ false)
// ü§• null
// ü§• undefined
// ü§• 0
// ü§• NaN
// ü§• "" (–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞)


// !true // false
// !false // true
// !"stonks" // false
// !0 // true

// if (!name) { // –ï—Å–ª–∏ –ù–ï–¢ name, —Ç–æ...
//     //...
//    }